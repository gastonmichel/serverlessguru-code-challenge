service: serverlessguru-code-challenge-backend
app: serverlessguru-code-challenge
org: gastonmichel
variablesResolutionMode: 20210326


# custom:
#   tableName: 'books-table-${stage}'
#   apiName: 'books-api-${stage}'

provider:
  name: aws
  stage: dev
  runtime: python3.9
  memorySize: 512
  lambdaHashingVersion: 20201221

functions:
  getBookById:
    handler: lambda.getBookById
    name: getBookById
  listBooks:
    handler: lambda.listBooks
    name: listBooks
    memorySize: 1024
  createBook:
    handler: lambda.createBook
    name: createBook
  deleteBook:
    handler: lambda.deleteBook
    name: deleteBook
  updateBook:
    handler: lambda.updateBook
    name: updateBook

component: graphql
name: graphql-api
inputs:
  src: ./
  resolvers:
    Query:
      getBookById:                      
        lambda: my-lambda
        request: '{"version": "2017-02-28", "operation": "Invoke", "payload": $util.toJson($context)}'
        response: '$util.toJson($context.result)'
      listBooks:
        lambda: listBooks
        request: request.vtl
        response: response.vtl
    Mutation:
      createBook:
        lambda: createBook
        request: request.vtl
        response: response.vtl
      deleteBook:
        lambda: deleteBook
        request: request.vtl
        response: response.vtl
      updateBook:
        lambda: updateBook
        request: request.vtl
        response: response.vtl

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: bookId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: bookId
            KeyType: HASH
        TableName: 'books-table-dev'